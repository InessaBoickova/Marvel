{"version":3,"sources":["components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","alt","src","process","style","display","width","height","objectFit","margin","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","states","json","data","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","_transformCharacter","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","id","comics","items","getAllCharacters","offset","res","results","map","getCharacter","getComic","comic","title","pageCount","language","textObjects","price","prices","getComics","ComicsList","newItemLoading","setNewItemLoading","list","setList","setOffset","charEnded","setCharEnded","useEffect","onRequest","initial","then","onCharListLoaded","newList","length","itemRefs","useRef","elem","item","index","imgStyle","className","onClick","current","forEach","classList","remove","add","focus","focusOnItem","tabIndex","ref","el","to","errorMessage","spinner","Spinner","disabled","AppBanner","avengers","avengersLogo","CommicsPage"],"mappings":"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","file":"static/js/4.74ae8642.chunk.js","sourcesContent":["const ErrorMessage = () =>{\r\n    return (\r\n        <img alt = 'Error'\r\n        src = {process.env.PUBLIC_URL + '/error.gif'}\r\n        style = {{display:'block',width:'250px', height: '250px',objectFit: 'contain', margin: '0 auto'}}/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n    const {loading,request,error, clearError} = useHttp();\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=bf7a152fb52d1be51c5f46bf7dad913d';\r\n    const _baseOffset = 210;\r\n\r\n    const _transformCharacter = (char) =>{\r\n        return {\r\n            name: char.name,\r\n            description : char.description ? \r\n                        `${char.description.slice(0, 210)}...` \r\n                        : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            description: comic.description || 'There is no description',\r\n            pageCount: comic.pageCount ? `${comic.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n            language: comic.textObjects.language || 'en-us',\r\n            price: comic.prices[0].price ? `${comic.prices[0].price}$` : 'not available'\r\n        }\r\n    }\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) =>{\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) =>{\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const getComics = async(offset = _baseOffset) =>{\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results;\r\n    }\r\n   \r\n   return {loading,error, getAllCharacters, getCharacter,clearError, getComics,getComic}\r\n}\r\n\r\nexport default useMarvelService;","import { useState , useCallback } from \"react\";\r\n\r\nexport const useHttp = () =>{\r\n    const [loading , setLoading] = useState(false);\r\n    const [error,setError] = useState(null);\r\n\r\n    const request  = useCallback(async(url,\r\n            method = 'GET', \r\n            body =  null, \r\n            headers = {'Content-Type':'applicacation/json'})=>{\r\n\r\n        setLoading(true);\r\n\r\n        try{\r\n            const response = await fetch(url, {method,body,headers})\r\n\r\n            if(!response.ok){\r\n                throw new Error (`Could not feath ${url} , status : ${response.states}`)\r\n            }\r\n            setLoading(false);\r\n            const data = await response.json();\r\n            return data;\r\n\r\n        }catch(e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    },[]);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading , request , error , clearError};\r\n}","import './comicsList.scss';\r\nimport { useState, useEffect,useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nconst ComicsList = () => {\r\n    const [newItemLoading , setNewItemLoading] = useState(false);\r\n    const [list,setList] = useState([]);\r\n    const [offset,setOffset] = useState(2);\r\n    const [charEnded,setCharEnded] = useState(false);\r\n\r\n    const {loading,error,getComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true)\r\n    },[])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getComics(offset)\r\n            .then(onCharListLoaded)\r\n    }  \r\n\r\n    const onCharListLoaded = (newList) => {\r\n        if(newList.length < 8 ){\r\n           setCharEnded(true)\r\n        }\r\n        setList(list => [...list,...newList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset => offset + 8);\r\n    }\r\n    const itemRefs = useRef([]);\r\n\r\n    const focusOnItem = (id) => {\r\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemRefs.current[id].classList.add('char__item_selected');\r\n        itemRefs.current[id].focus();\r\n    }\r\n    const elem =  list.map((item,index) =>{\r\n        let thumbnail = item.thumbnail.path + '.' + item.thumbnail.extension;\r\n        let price = item.prices[0].price ? item.prices[0].price + '$': '';\r\n        let {title,id} = item;\r\n        let imgStyle = {'objectFit' : 'cover'};\r\n        if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n            imgStyle = {'objectFit' : 'unset'};\r\n        }\r\n\r\n        return (\r\n            <li className='comics__list'\r\n                    key={index}\r\n                    onClick = {()=> {\r\n                        focusOnItem(index);}\r\n                    }\r\n                    tabIndex = {0}\r\n                    ref={el => itemRefs.current[index] = el}>\r\n               <Link to = {`/comics/${id}`}>\r\n                    <img className='comics__item-img' src={thumbnail} alt={title} style={imgStyle}/>\r\n                    <div className=\"comics__item-name\">{title}</div>\r\n                    <div className=\"comics__item-price\">{price}</div>\r\n               </Link>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n    return (\r\n        <div className=\"comics__list\">\r\n            <ul className=\"comics__grid\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {elem}\r\n            </ul>\r\n            <button className=\"button button__main button__long\"\r\n                disabled = {newItemLoading} \r\n                style = {{'display': charEnded ? 'none' : 'block'}}\r\n                onClick = {() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import ComicsList from '../comicsList/ComicsList';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\nconst CommicsPage = () =>{\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CommicsPage;"],"sourceRoot":""}