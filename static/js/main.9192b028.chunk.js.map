{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","services/MarvelService.js","hooks/http.hook.js","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/pages/404.js","components/pages/SingleComicPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","end","style","color","isActive","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","states","json","data","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","_transformCharacter","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","id","comics","items","getAllCharacters","offset","res","results","map","getCharacter","getComic","comic","title","pageCount","language","textObjects","price","prices","getComics","ErrorMessage","alt","src","process","objectFit","View","imgStyle","href","RandomChar","setChar","upDateChar","Math","floor","random","then","onCharLoaded","useEffect","errorMessage","spinner","content","onClick","mjolnir","CharList","onCharCelected","newItemLoading","setNewItemLoading","list","setList","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newList","length","itemRefs","useRef","elem","item","index","current","forEach","classList","remove","add","focus","focusOnItem","tabindex","ref","el","disabled","Skeleton","i","CharInfo","charId","updateChar","skeleton","ErrorBoundary","state","this","setState","props","children","Component","MainPage","selectedChar","setSelectedChar","decoration","ComicsList","tabIndex","AppBanner","avengers","avengersLogo","CommicsPage","Page404","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","App","element","ComicsPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9192b028.chunk.js","sourcesContent":["import './appHeader.scss';\r\nimport {Link,NavLink } from 'react-router-dom';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <Link to='/Marvel/'>\r\n                    <span>Marvel</span> information portal\r\n                </Link>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><NavLink end \r\n                        style={ ({isActive }) => ({color: isActive? '#9f0013': 'inherit'})} \r\n                        to='/Marvel/'>Characters</NavLink></li>\r\n                    /\r\n                    <li><NavLink   \r\n                        style={ ({isActive }) =>  ({color: isActive? '#9f0013': 'inherit'})}\r\n                        to='/comics'>Comics</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import {useHttp} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n    const {loading,request,error, clearError} = useHttp();\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=bf7a152fb52d1be51c5f46bf7dad913d';\r\n    const _baseOffset = 210;\r\n\r\n    const _transformCharacter = (char) =>{\r\n        return {\r\n            name: char.name,\r\n            description : char.description ? \r\n                        `${char.description.slice(0, 210)}...` \r\n                        : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            description: comic.description || 'There is no description',\r\n            pageCount: comic.pageCount ? `${comic.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n            language: comic.textObjects.language || 'en-us',\r\n            price: comic.prices[0].price ? `${comic.prices[0].price}$` : 'not available'\r\n        }\r\n    }\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) =>{\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) =>{\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const getComics = async(offset = _baseOffset) =>{\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results;\r\n    }\r\n   \r\n   return {loading,error, getAllCharacters, getCharacter,clearError, getComics,getComic}\r\n}\r\n\r\nexport default useMarvelService;","import { useState , useCallback } from \"react\";\r\n\r\nexport const useHttp = () =>{\r\n    const [loading , setLoading] = useState(false);\r\n    const [error,setError] = useState(null);\r\n\r\n    const request  = useCallback(async(url,\r\n            method = 'GET', \r\n            body =  null, \r\n            headers = {'Content-Type':'applicacation/json'})=>{\r\n\r\n        setLoading(true);\r\n\r\n        try{\r\n            const response = await fetch(url, {method,body,headers})\r\n\r\n            if(!response.ok){\r\n                throw new Error (`Could not feath ${url} , status : ${response.states}`)\r\n            }\r\n            setLoading(false);\r\n            const data = await response.json();\r\n            return data;\r\n\r\n        }catch(e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    },[]);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading , request , error , clearError};\r\n}","const ErrorMessage = () =>{\r\n    return (\r\n        <img alt = 'Error'\r\n        src = {process.env.PUBLIC_URL + '/error.gif'}\r\n        style = {{display:'block',width:'250px', height: '250px',objectFit: 'contain', margin: '0 auto'}}/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import './randomChar.scss';\r\nimport Spinner from '../spinner/Spinner';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst RandomChar = () => {\r\n    const [char, setChar] = useState({});\r\n\r\n    const {loading,error,getCharacter, clearError} = useMarvelService();\r\n\r\n    const upDateChar = ()=>{\r\n        clearError();\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000 );\r\n        getCharacter(id)\r\n            .then(onCharLoaded);\r\n    }\r\n    const onCharLoaded = (char) =>{\r\n        setChar({...char});\r\n    }\r\n\r\n    useEffect(() => {\r\n        upDateChar();\r\n    },[])\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error) ? <View char = {char}/> : null;\r\n\r\n    return (\r\n    \r\n        <div className=\"randomchar\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button className=\"button button__main\" onClick={()=> upDateChar()}>\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = (char) =>{\r\n    const {name,description,thumbnail,homepage,wiki} = char.char;\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description}\r\n                </p>\r\n            <div className=\"randomchar__btns\">\r\n                <a href={homepage} className=\"button button__main\">\r\n                    <div className=\"inner\">homepage</div>\r\n                </a>\r\n                <a href={wiki} className=\"button button__secondary\">\r\n                    <div className=\"inner\">Wiki</div>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import { useState,useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport './charList.scss';\r\n\r\nconst CharList = ({onCharCelected}) => {\r\n    const [newItemLoading , setNewItemLoading] = useState(false);\r\n    const [list,setList] = useState([]);\r\n    const [offset,setOffset] = useState(210);\r\n    const [charEnded,setCharEnded] = useState(false);\r\n\r\n    const {loading,error,getAllCharacters} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true)\r\n    },[])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllCharacters(offset)\r\n            .then(onCharListLoaded)\r\n    }  \r\n\r\n    const onCharListLoaded = (newList) => {\r\n        if(newList.length < 9){\r\n           setCharEnded(true)\r\n        }\r\n\r\n        setList(list => [...list,...newList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset => offset + 9);\r\n    }\r\n    const itemRefs = useRef([]);\r\n\r\n    const focusOnItem = (id) => {\r\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemRefs.current[id].classList.add('char__item_selected');\r\n        itemRefs.current[id].focus();\r\n    }\r\n    \r\n    const elem =  list.map((item,index) =>{\r\n        let {name,thumbnail,id} = item;\r\n        let imgStyle = {'objectFit' : 'cover'};\r\n        if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n            imgStyle = {'objectFit' : 'unset'};\r\n        }\r\n\r\n        return (\r\n            <li className={'char__item'}\r\n                key={id}\r\n                onClick = {()=> {\r\n                    onCharCelected(id);\r\n                    focusOnItem(index);}\r\n                }\r\n                tabindex = {0}\r\n                ref={el => itemRefs.current[index] = el}>\r\n                <img src={thumbnail} alt={item.name} style={imgStyle}/>\r\n                <div className=\"char__name\">{name}</div>\r\n             </li>\r\n        )\r\n    })\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            <ul className=\"char__grid\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {elem}\r\n            </ul>\r\n            <button className=\"button button__main button__long\"\r\n                    disabled = {newItemLoading} \r\n                    style = {{'display': charEnded ? 'none' : 'block'}}\r\n                    onClick = {() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nCharList.propTypes =  {\r\n    onCharCelected: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import './charInfo.scss';\r\nimport { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton'\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\n\r\nconst CharInfo = ({charId})=> {\r\n    const [char , setChar] = useState(null);\r\n\r\n    const {loading,error, getCharacter, clearError} = useMarvelService();\r\n\r\n    useEffect (()=>{\r\n        updateChar();\r\n    },[charId])\r\n\r\n    const updateChar = () => {\r\n        if (!charId) {\r\n            return;\r\n        }\r\n        clearError();\r\n        getCharacter(charId)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char)\r\n    }\r\n\r\n    const skeleton = char || loading || error ? null : <Skeleton/>;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length > 0 ? null : 'There is no comics with this character'}\r\n                {\r\n                    comics.map((item, i) => {\r\n                        if (i > 11 ) return;\r\n                        return (\r\n                            <li key={i} className=\"char__comics-item\">\r\n                                {item.name}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }                \r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes =  {\r\n    crarId: PropTypes.number,\r\n}\r\n\r\nexport default CharInfo;","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component{\r\n    state = {\r\n        error: false,\r\n    }\r\n\r\n    componentDidCatch(){\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.error){\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n    const [selectedChar,setSelectedChar] = useState(null);\r\n\r\n    const onCharCelected = (id) =>{\r\n        setSelectedChar(id);\r\n    }\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n                \r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                        <CharList onCharCelected= {onCharCelected}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId ={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            \r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import './comicsList.scss';\r\nimport { useState, useEffect,useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nconst ComicsList = () => {\r\n    const [newItemLoading , setNewItemLoading] = useState(false);\r\n    const [list,setList] = useState([]);\r\n    const [offset,setOffset] = useState(2);\r\n    const [charEnded,setCharEnded] = useState(false);\r\n\r\n    const {loading,error,getComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true)\r\n    },[])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getComics(offset)\r\n            .then(onCharListLoaded)\r\n    }  \r\n\r\n    const onCharListLoaded = (newList) => {\r\n        if(newList.length < 8 ){\r\n           setCharEnded(true)\r\n        }\r\n        setList(list => [...list,...newList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset => offset + 8);\r\n    }\r\n    const itemRefs = useRef([]);\r\n\r\n    const focusOnItem = (id) => {\r\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemRefs.current[id].classList.add('char__item_selected');\r\n        itemRefs.current[id].focus();\r\n    }\r\n    const elem =  list.map((item,index) =>{\r\n        let thumbnail = item.thumbnail.path + '.' + item.thumbnail.extension;\r\n        let price = item.prices[0].price ? item.prices[0].price + '$': '';\r\n        let {title,id} = item;\r\n        let imgStyle = {'objectFit' : 'cover'};\r\n        if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n            imgStyle = {'objectFit' : 'unset'};\r\n        }\r\n\r\n        return (\r\n            <li className='comics__list'\r\n                    key={index}\r\n                    onClick = {()=> {\r\n                        focusOnItem(index);}\r\n                    }\r\n                    tabIndex = {0}\r\n                    ref={el => itemRefs.current[index] = el}>\r\n               <Link to = {`/comics/${id}`}>\r\n                    <img className='comics__item-img' src={thumbnail} alt={title} style={imgStyle}/>\r\n                    <div className=\"comics__item-name\">{title}</div>\r\n                    <div className=\"comics__item-price\">{price}</div>\r\n               </Link>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n    return (\r\n        <div className=\"comics__list\">\r\n            <ul className=\"comics__grid\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {elem}\r\n            </ul>\r\n            <button className=\"button button__main button__long\"\r\n                disabled = {newItemLoading} \r\n                style = {{'display': charEnded ? 'none' : 'block'}}\r\n                onClick = {() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import ComicsList from '../comicsList/ComicsList';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\nconst CommicsPage = () =>{\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CommicsPage;","import {Link} from 'react-router-dom';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div >\r\n            <ErrorMessage/>\r\n            <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px','color': 'black','marginTop': '20px'}}>Page doesn't exist</p>\r\n            <Link style={{'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px', 'marginTop': '15px','color': 'grey'}} to=\"/Marvel/\">Back to main page</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import './singleComicPage.scss';\r\nimport { useState, useEffect } from \"react\";\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SingleComicPage = () => {\r\n    const {comicId} = useParams();\r\n    const [comic , setComic] = useState(null);\r\n    const {loading,error, getComic, clearError} = useMarvelService();\r\n   \r\n    useEffect (()=>{\r\n        updateComic();\r\n    },[comicId])\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic)\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic= {comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic})=>{\r\n    const {title,description,pageCount,thumbnail,language,price} = comic;\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language:{language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to='/comics' className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","import AppHeader from \"../appHeader/AppHeader\";\r\nimport {MainPage,ComicsPage,Page404 ,SingleComicPage} from \"../pages/index\";\r\nimport {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\r\n\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                <AppHeader/> \r\n                <main>\r\n                    <Routes>\r\n                        <Route  path='/Marvel/' element={<MainPage/>}/>\r\n                        <Route path ='/comics' element={ <ComicsPage/>}/>\r\n                        <Route path ='/comics/:comicId' element={ <SingleComicPage/>}/>\r\n                        <Route path='*' element ={<Page404/>}/>\r\n                    </Routes>\r\n                </main> \r\n            </div>\r\n        </Router>  \r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport './style/style.scss';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}