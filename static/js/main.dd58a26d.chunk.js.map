{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","services/MarvelService.js","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","result","ok","Error","states","json","getAllCharacters","offset","res","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","ErrorMessage","alt","src","process","objectFit","View","imgStyle","RandomChar","useState","setChar","loading","setLoading","error","setError","marvelService","upDateChar","Math","floor","random","then","onCharLoaded","catch","OnError","useEffect","errorMessage","spinner","content","onClick","mjolnir","CharList","props","onCharCelected","newItemLoading","setNewItemLoading","list","setList","setOffset","charEnded","setCharEnded","onRequest","onCharListLoading","onCharListLoaded","onError","newList","length","itemRefs","setRef","ref","push","elem","item","index","forEach","classList","remove","add","focus","focusOnItem","tabindex","disabled","Skeleton","CharInfo","state","updateChar","charId","onCharLoading","setState","this","prevProps","skeleton","Component","i","ErrorBoundary","children","App","selectedChar","setSelectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAqBeA,EAnBG,WACd,OACI,yBAAQC,UAAU,cAAlB,UACI,oBAAIA,UAAU,aAAd,SACI,oBAAGC,KAAK,IAAR,UACI,0CADJ,2BAIJ,qBAAKD,UAAU,YAAf,SACI,+BACI,6BAAI,mBAAGC,KAAK,IAAR,0BADR,IAGI,6BAAI,mBAAGA,KAAK,IAAR,+B,QCyDTC,G,MAvEC,WACZ,OACI,sBAAKC,MAAM,6BAA6BC,MAAO,CAACC,OAAQ,SAAUC,WAAY,OAAQC,QAAS,SAAUC,MAAM,QAAQC,OAAO,QAAQC,QAAQ,cAAcC,oBAAoB,WAAhL,UACI,mBAAGC,UAAU,mBAAb,SACI,mBAAGA,UAAU,YAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,IAAvD,UACI,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAIrH,mBAAGR,UAAU,iDAAb,SACI,mBAAGA,UAAU,aAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAIjH,mBAAGR,UAAU,mBAAb,SACI,mBAAGA,UAAU,aAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAvD,UACA,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAIjH,mBAAGR,UAAU,kDAAb,SACI,mBAAGA,UAAU,cAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACI,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,QAAQC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAChI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,iBAIrH,mBAAGR,UAAU,kCAAb,SACI,mBAAGA,UAAU,cAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,MAAvD,UACI,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAIrH,mBAAGR,UAAU,kDAAb,SACI,mBAAGA,UAAU,cAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACI,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAIrH,mBAAGR,UAAU,kCAAb,SACI,mBAAGA,UAAU,cAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAvD,UACI,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAIrH,mBAAGR,UAAU,iDAAb,SACI,mBAAGA,UAAU,cAAb,SACI,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAvD,UACI,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,KAAKC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAC7H,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mB,+BCxBlHK,E,iDAtCXC,SAAW,4C,KACXC,QAAU,0C,KACVC,YAAc,I,KAEdC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sEACSC,MAAMF,GADf,WACNG,EADM,QAGCC,GAHD,sBAIA,IAAIC,MAAJ,0BAA8BL,EAA9B,uBAAgDG,EAAOG,SAJvD,uBAMGH,EAAOI,OANV,mF,2DASdC,iB,sBAAmB,0CAAAP,EAAA,6DAAOQ,EAAP,+BAAgB,EAAKX,YAArB,SACG,EAAKC,YAAL,UAAoB,EAAKH,SAAzB,qCAA8Da,EAA9D,YAAwE,EAAKZ,UADhF,cACTa,EADS,yBAERA,EAAIC,KAAKC,QAAQC,IAAI,EAAKC,sBAFlB,2C,KAKnBC,a,uCAAe,WAAOC,GAAP,eAAAf,EAAA,sEACO,EAAKF,YAAL,UAAoB,EAAKH,SAAzB,sBAA+CoB,EAA/C,YAAqD,EAAKnB,UADjE,cACLa,EADK,yBAEJ,EAAKI,oBAAoBJ,EAAIC,KAAKC,QAAQ,KAFtC,2C,2DAKfE,oBAAsB,SAACG,GACnB,MAAO,CACHC,KAAMD,EAAKC,KACXC,YAAcF,EAAKE,YAAL,UACCF,EAAKE,YAAYC,MAAM,EAAG,KAD3B,OAEA,6CACdC,UAAWJ,EAAKI,UAAUC,KAAO,IAAML,EAAKI,UAAUE,UACtDC,SAAUP,EAAKQ,KAAK,GAAGzB,IACvB0B,KAAMT,EAAKQ,KAAK,GAAGzB,IACnBgB,GAAIC,EAAKD,GACTW,OAAQV,EAAKU,OAAOC,SC1BjBC,EARM,WACjB,OACI,qBAAKC,IAAM,QACXC,IAAOC,oBACP1D,MAAS,CAACG,QAAQ,QAAQC,MAAM,QAASC,OAAQ,QAAQsD,UAAW,UAAW1D,OAAQ,aCJhF,MAA0B,oCC+DnC2D,EAAO,SAACjB,GACV,MAAmDA,EAAKA,KAAjDC,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,YAAYE,EAAxB,EAAwBA,UAAUG,EAAlC,EAAkCA,SAASE,EAA3C,EAA2CA,KACvCS,EAAW,CAAC,UAAc,SAI9B,MAHkB,wEAAdd,IACAc,EAAW,CAAC,UAAc,YAG1B,sBAAKjE,UAAU,oBAAf,UACI,qBAAK6D,IAAKV,EAAWS,IAAI,mBAAmB5D,UAAU,kBAAkBI,MAAO6D,IAC/E,sBAAKjE,UAAU,mBAAf,UACI,mBAAGA,UAAU,mBAAb,SAAiCgD,IACjC,mBAAGhD,UAAU,oBAAb,SACKiD,IAET,sBAAKjD,UAAU,mBAAf,UACI,mBAAGC,KAAMqD,EAAUtD,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAGC,KAAMuD,EAAMxD,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,8BAQLkE,EAnFI,WACf,MAAwBC,mBAAS,IAAjC,mBAAOpB,EAAP,KAAaqB,EAAb,KACA,EAA+BD,oBAAS,GAAxC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAAyBH,oBAAS,GAAlC,mBAAOI,EAAP,KAAaC,EAAb,KAEMC,EAAgB,IAAIhD,EAEpBiD,EAAa,WACf,IAAM5B,EAAK6B,KAAKC,MAAM,IAAAD,KAAKE,SAAiC,QAC5DJ,EACK5B,aAAaC,GACbgC,KAAKC,GACLC,MAAMC,GACXX,GAAW,IAETS,EAAe,SAAChC,GAClBqB,EAAQ,eAAIrB,IACZuB,GAAW,IAGTW,EAAU,WACZX,GAAW,GACXE,GAAS,IAGbU,qBAAU,WACNR,MACF,IAEF,IAAMS,EAAeZ,EAAQ,cAAC,EAAD,IAAkB,KACzCa,EAAUf,EAAU,cAAC,EAAD,IAAa,KACjCgB,EAAYhB,GAAWE,EAAiC,KAAxB,cAAC,EAAD,CAAMxB,KAAQA,IAEpD,OAEI,sBAAK/C,UAAU,aAAf,UACKmF,EACAC,EACAC,EACD,sBAAKrF,UAAU,qBAAf,UACI,oBAAGA,UAAU,oBAAb,wCAC+B,uBAD/B,4CAIA,mBAAGA,UAAU,oBAAb,mCAGA,wBAAQA,UAAU,sBAAsBsF,QAAS,kBAAKZ,KAAtD,SACI,qBAAO1E,UAAU,QAAjB,sBAEJ,qBAAK6D,IAAK0B,EAAS3B,IAAI,UAAU5D,UAAU,kC,QCgD5CwF,G,MAlGE,SAACC,GACd,IAAOC,EAAkBD,EAAlBC,eACP,EAA+BvB,oBAAS,GAAxC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAA6CH,oBAAS,GAAtD,mBAAOwB,EAAP,KAAwBC,EAAxB,KACA,EAAyBzB,oBAAS,GAAlC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAAuBL,mBAAS,IAAhC,mBAAO0B,EAAP,KAAYC,EAAZ,KACA,EAA2B3B,mBAAS,KAApC,mBAAO5B,EAAP,KAAcwD,EAAd,KACA,EAAiC5B,oBAAS,GAA1C,mBAAO6B,EAAP,KAAiBC,EAAjB,KACMxB,EAAgB,IAAIhD,EAE1ByD,qBAAU,WACNgB,MACF,IAEF,IAAMA,EAAY,SAAC3D,GACf4D,IACA1B,EAAcnC,iBAAiBC,GAC1BuC,KAAKsB,GACLpB,MAAMqB,IAGTF,EAAoB,WACtBP,GAAkB,IAGhBQ,EAAmB,SAACE,GACnBA,EAAQC,OAAS,GACjBN,GAAa,GAGhBH,EAAQ,GAAD,mBAAKD,GAAL,YAAaS,KACpBhC,GAAW,GACXsB,GAAkB,GAClBG,EAAUxD,EAAS,IAGjB8D,EAAU,WACZ7B,GAAS,GACTF,GAAW,IAETkC,EAAW,GAEXC,EAAS,SAACC,GACZF,EAASG,KAAKD,IASZE,EAAQf,EAAKlD,KAAI,SAACkE,EAAKC,GACzB,IAAK9D,EAAqB6D,EAArB7D,KAAKG,EAAgB0D,EAAhB1D,UAAUL,EAAM+D,EAAN/D,GAChBmB,EAAW,CAAC,UAAc,SAI9B,MAHuB,wEAAnB4C,EAAK1D,YACLc,EAAW,CAAC,UAAc,UAG1B,qBAAIjE,UAAW,aAEXsF,QAAW,WACPI,EAAe5C,GAhBX,SAACA,GACjB0D,EAASO,SAAQ,SAAAF,GAAI,OAAIA,EAAKG,UAAUC,OAAO,0BAC/CT,EAAS1D,GAAIkE,UAAUE,IAAI,uBAC3BV,EAAS1D,GAAIqE,QAcDC,CAAYN,IAEhBO,SAAY,EACZX,IAAKD,EAPT,UAQI,qBAAK5C,IAAKV,EAAWS,IAAKiD,EAAK7D,KAAM5C,MAAO6D,IAC5C,qBAAKjE,UAAU,aAAf,SAA6BgD,MARxBF,MAaXqC,EAAeZ,EAAQ,cAAC,EAAD,IAAkB,KACzCa,EAAUf,EAAU,cAAC,EAAD,IAAa,KACjCgB,EAAYhB,GAAWE,EAAgB,KAAPqC,EAEtC,OACI,sBAAK5G,UAAU,aAAf,UACI,qBAAIA,UAAU,aAAd,UACKmF,EACAC,EACAC,KAEL,wBAAQrF,UAAU,mCACVsH,SAAY3B,EACZvF,MAAS,CAAC,QAAW4F,EAAY,OAAS,SAC1CV,QAAW,kBAAMY,EAAU3D,IAHnC,SAII,qBAAKvC,UAAU,QAAf,8B,qBC5EDuH,G,YAjBE,WACb,OACI,qCACI,mBAAGvH,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,kCCJzBwH,E,4MAEFC,MAAQ,CACJ1E,KAAM,KACNsB,SAAS,EACTE,OAAO,G,EAGXE,cAAgB,IAAIhD,E,EAYpBiG,WAAa,WACT,IAAOC,EAAU,EAAKlC,MAAfkC,OACFA,IAIL,EAAKC,gBAEL,EAAKnD,cACA5B,aAAa8E,GACb7C,KAAK,EAAKC,cACVC,MAAM,EAAKqB,W,EAGpBtB,aAAe,SAAChC,GACZ,EAAK8E,SAAS,CACV9E,OACAsB,SAAS,K,EAIjBuD,cAAgB,WACZ,EAAKC,SAAS,CACVxD,SAAS,K,EAIjBgC,QAAU,WACN,EAAKwB,SAAS,CACVxD,SAAS,EACTE,OAAO,K,uDAxCf,WACIuD,KAAKJ,e,gCAGT,SAAmBK,GACXD,KAAKrC,MAAMkC,SAAWI,EAAUJ,QAChCG,KAAKJ,e,oBAsCb,WACI,MAA+BI,KAAKL,MAA7B1E,EAAP,EAAOA,KAAMsB,EAAb,EAAaA,QAASE,EAAtB,EAAsBA,MAEhByD,EAAWjF,GAAQsB,GAAWE,EAAQ,KAAO,cAAC,EAAD,IAC7CY,EAAeZ,EAAQ,cAAC,EAAD,IAAkB,KACzCa,EAAUf,EAAU,cAAC,EAAD,IAAa,KACjCgB,EAAYhB,GAAWE,IAAUxB,EAA8B,KAAtB,cAAC,EAAD,CAAMA,KAAMA,IAE3D,OACI,sBAAK/C,UAAU,aAAf,UACKgI,EACA7C,EACAC,EACAC,S,GAnEM4C,aAyEjBjE,EAAO,SAAC,GAAY,IAAXjB,EAAU,EAAVA,KACJC,EAAwDD,EAAxDC,KAAMC,EAAkDF,EAAlDE,YAAaE,EAAqCJ,EAArCI,UAAWG,EAA0BP,EAA1BO,SAAUE,EAAgBT,EAAhBS,KAAMC,EAAUV,EAAVU,OAEjDQ,EAAW,CAAC,UAAc,SAK9B,MAJkB,wEAAdd,IACAc,EAAW,CAAC,UAAc,YAI1B,qCACI,sBAAKjE,UAAU,eAAf,UACI,qBAAK6D,IAAKV,EAAWS,IAAKZ,EAAM5C,MAAO6D,IACvC,gCACI,qBAAKjE,UAAU,kBAAf,SAAkCgD,IAClC,sBAAKhD,UAAU,aAAf,UACI,mBAAGC,KAAMqD,EAAUtD,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAGC,KAAMuD,EAAMxD,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,6BAKhB,qBAAKA,UAAU,cAAf,SACKiD,IAEL,qBAAKjD,UAAU,eAAf,qBACA,qBAAIA,UAAU,oBAAd,UACKyD,EAAO8C,OAAS,EAAI,KAAO,yCAExB9C,EAAOd,KAAI,SAACkE,EAAMqB,GACd,KAAIA,EAAI,IACR,OACI,oBAAYlI,UAAU,oBAAtB,SACK6G,EAAK7D,MADDkF,aAetBV,IC7GAW,E,4MAlBXV,MAAQ,CACJlD,OAAO,G,uDAGX,WACIuD,KAAKD,SAAS,CACVtD,OAAO,M,oBAGf,WACI,OAAGuD,KAAKL,MAAMlD,MACH,cAAC,EAAD,IAGJuD,KAAKrC,MAAM2C,a,GAfEH,aCHb,MAA0B,mCCqC1BI,EA5BH,WACR,MAAuClE,mBAAS,MAAhD,mBAAOmE,EAAP,KAAoBC,EAApB,KAMA,OACI,sBAAKvI,UAAU,MAAf,UACI,cAAC,EAAD,IACA,iCACG,cAAC,EAAD,UACK,cAAC,EAAD,MAEJ,sBAAKA,UAAU,gBAAf,UACG,cAAC,EAAD,UACK,cAAC,EAAD,CAAU0F,eAbP,SAAC5C,GACpByF,EAAgBzF,QAcJ,cAAC,EAAD,UACI,cAAC,EAAD,CAAU6E,OAASW,SAG3B,qBAAKtI,UAAU,gBAAgB6D,IAAK2E,EAAY5E,IAAI,kB,MCxBpE6E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dd58a26d.chunk.js","sourcesContent":["import './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <a href=\"#\">\r\n                    <span>Marvel</span> information portal\r\n                </a>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><a href=\"#\">Characters</a></li>\r\n                    /\r\n                    <li><a href=\"#\">Comics</a></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=bf7a152fb52d1be51c5f46bf7dad913d';\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) =>{\r\n        let result = await fetch(url);\r\n\r\n        if(!result.ok){\r\n            throw new Error (`Could not feath ${url} , status : ${result.states}`)\r\n        }\r\n        return await result.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) =>{\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) =>{\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) =>{\r\n        return {\r\n            name: char.name,\r\n            description : char.description ? \r\n                        `${char.description.slice(0, 210)}...` \r\n                        : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","const ErrorMessage = () =>{\r\n    return (\r\n        <img alt = 'Error'\r\n        src = {process.env.PUBLIC_URL + '/error.gif'}\r\n        style = {{display:'block',width:'250px', height: '250px',objectFit: 'contain', margin: '0 auto'}}/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import './randomChar.scss';\r\nimport Spinner from '../spinner/Spinner';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst RandomChar = () => {\r\n    const [char, setChar] = useState({});\r\n    const [loading , setLoading] = useState(true);\r\n    const [error,setError] = useState(false);\r\n\r\n    const marvelService = new MarvelService();\r\n\r\n    const upDateChar = ()=>{\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000 );\r\n        marvelService\r\n            .getCharacter(id)\r\n            .then(onCharLoaded)\r\n            .catch(OnError);\r\n        setLoading(true)\r\n    }\r\n    const onCharLoaded = (char) =>{\r\n        setChar({...char});\r\n        setLoading(false)\r\n    }\r\n    \r\n    const OnError = () =>{\r\n        setLoading(false);\r\n        setError(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        upDateChar();\r\n    },[])\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error) ? <View char = {char}/> : null;\r\n\r\n    return (\r\n    \r\n        <div className=\"randomchar\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button className=\"button button__main\" onClick={()=> upDateChar()}>\r\n                    <div   className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = (char) =>{\r\n    const {name,description,thumbnail,homepage,wiki} = char.char;\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description}\r\n                </p>\r\n            <div className=\"randomchar__btns\">\r\n                <a href={homepage} className=\"button button__main\">\r\n                    <div className=\"inner\">homepage</div>\r\n                </a>\r\n                <a href={wiki} className=\"button button__secondary\">\r\n                    <div className=\"inner\">Wiki</div>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import { useState,useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport './charList.scss';\r\n\r\nconst CharList = (props) => {\r\n    const {onCharCelected} = props;\r\n    const [loading , setLoading] = useState(true);\r\n    const [newItemLoading , setNewItemLoading] = useState(false);\r\n    const [error,setError] = useState(false);\r\n    const [list,setList] = useState([]);\r\n    const [offset,setOffset] = useState(210);\r\n    const [charEnded,setCharEnded] = useState(false);\r\n    const marvelService = new MarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest()\r\n    },[])\r\n\r\n    const onRequest = (offset) => {\r\n        onCharListLoading();\r\n        marvelService.getAllCharacters(offset)\r\n            .then(onCharListLoaded)\r\n            .catch(onError)\r\n    }  \r\n\r\n    const onCharListLoading = () =>{\r\n        setNewItemLoading(true);\r\n    }\r\n\r\n    const onCharListLoaded = (newList) => {\r\n        if(newList.length < 9){\r\n           setCharEnded(true)\r\n        }\r\n\r\n        setList([...list,...newList]);\r\n        setLoading(false);\r\n        setNewItemLoading(false);\r\n        setOffset(offset + 9);\r\n    }\r\n\r\n    const onError = () => {\r\n        setError(true);\r\n        setLoading(false)\r\n    }\r\n    const itemRefs = [];\r\n\r\n    const setRef = (ref) => {\r\n        itemRefs.push(ref);\r\n    }\r\n\r\n    const focusOnItem = (id) => {\r\n        itemRefs.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemRefs[id].classList.add('char__item_selected');\r\n        itemRefs[id].focus();\r\n    }\r\n    \r\n    const elem =  list.map((item,index) =>{\r\n        let {name,thumbnail,id} = item;\r\n        let imgStyle = {'objectFit' : 'cover'};\r\n        if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n            imgStyle = {'objectFit' : 'unset'};\r\n        }\r\n        return (\r\n            <li className={'char__item'}\r\n                key={id}\r\n                onClick = {()=> {\r\n                    onCharCelected(id);\r\n                    focusOnItem(index);}\r\n                }\r\n                tabindex = {0}\r\n                ref={setRef}>\r\n                <img src={thumbnail} alt={item.name} style={imgStyle}/>\r\n                <div className=\"char__name\">{name}</div>\r\n             </li>\r\n        )\r\n    })\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error) ? elem : null;\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            <ul className=\"char__grid\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </ul>\r\n            <button className=\"button button__main button__long\"\r\n                    disabled = {newItemLoading} \r\n                    style = {{'display': charEnded ? 'none' : 'block'}}\r\n                    onClick = {() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nCharList.propTypes =  {\r\n    onCharCelected: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import './charInfo.scss';\r\nimport {Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton'\r\nimport MarvelService from '../../services/MarvelService';\r\n\r\n\r\nclass CharInfo extends Component {\r\n\r\n    state = {\r\n        char: null,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.charId !== prevProps.charId) {\r\n            this.updateChar();\r\n        }\r\n    }\r\n\r\n    updateChar = () => {\r\n        const {charId} = this.props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n\r\n        this.onCharLoading();\r\n\r\n        this.marvelService\r\n            .getCharacter(charId)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char, \r\n            loading: false\r\n        })\r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {char, loading, error} = this.state;\r\n\r\n        const skeleton = char || loading || error ? null : <Skeleton/>;\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n        return (\r\n            <div className=\"char__info\">\r\n                {skeleton}\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length > 0 ? null : 'There is no comics with this character'}\r\n                {\r\n                    comics.map((item, i) => {\r\n                        if (i > 11 ) return;\r\n                        return (\r\n                            <li key={i} className=\"char__comics-item\">\r\n                                {item.name}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }                \r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes =  {\r\n    crarId: PropTypes.number,\r\n}\r\n\r\nexport default CharInfo;","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component{\r\n    state = {\r\n        error: false,\r\n    }\r\n\r\n    componentDidCatch(){\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.error){\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst App = () => {\r\n    const [selectedChar,setSelectedChar] = useState(null);\r\n\r\n    const onCharCelected = (id) =>{\r\n        setSelectedChar(id);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"app\">\r\n            <AppHeader/>\r\n            <main>\r\n               <ErrorBoundary>\r\n                    <RandomChar/>\r\n               </ErrorBoundary>\r\n                <div className=\"char__content\">\r\n                   <ErrorBoundary>\r\n                        <CharList onCharCelected= {onCharCelected}/>\r\n                   </ErrorBoundary>\r\n                    <ErrorBoundary>\r\n                        <CharInfo charId ={selectedChar}/>\r\n                    </ErrorBoundary>\r\n                </div>\r\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport './style/style.scss';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}